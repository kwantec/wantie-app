<!DOCTYPE html>
<html lang="en">
<head>
<title>Facebook Login JavaScript Example</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.min.css">

<!-- Optional theme -->
<link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap-theme.min.css">

<!--
<script src="/lib/react/react.min.js"></script>
<script src="/lib/react/JSXTransformer.js"></script>
-->

</head>
<body ng-app="myApp">
<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      
	  angular.element(document.getElementById('tabsControllerId')).scope().loggedIn();
	  
	  testAPI();
	  
	  
	  
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
		//document.getElementById('status').innerHTML = 'Please log into this app.';
		angular.element(document.getElementById('tabsControllerId')).scope().loggedOut();
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
		//document.getElementById('status').innerHTML = 'Please log into Facebook.';
		angular.element(document.getElementById('tabsControllerId')).scope().loggedOut();
    }
	
	angular.element(document.getElementById('tabsControllerId')).scope().$apply();
	
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '793572864071885',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.2' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
	  console.log(response);
      //document.getElementById('status').innerHTML = 'Thanks for logging in, ' + response.name + '!';
    });
  }
</script>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

<nav class="navbar navbar-default">
  <div class="container-fluid">
    <div class="navbar-header">
      <a class="navbar-brand" href="#">
        <img alt="Wantie.club" src="...">
      </a>
    </div>
  </div>
</nav>


<div class="row" ng-controller="tabsController" id="tabsControllerId">
	<div class="col-md-1"></div>
	<div class="col-md-10">
		<tabset>
			<tab heading="Needs" select="selectedNeed()" data-ng-if="isloggedIn" >
				<div class="panel panel-default">
				  <div class="panel-body">
					  <table class="table table-hover table-bordered table-condensed table-striped" >
						  <tr>
						  	<th>Category</th>
							<th>City</th>
							<th>Matches</th>
						 </tr>
						  <tr ng-repeat="w in wants">
					    	  <td>{{w.category}}</td>
							  <td>{{w.city}}</td>
							  <td>{{w.matches}}</td>
						</tr>
					  </table>
<!--				    
					<div id="example"></div>
					<script type="text/jsx" src="/dist/index.jsx"></script>
-->					
				  </div>
				</div>
			</tab>
			<tab heading="Provide" select="selectedProvide()" data-ng-if="isloggedIn">
					  
				<div class="panel panel-default">
				  <div class="panel-body">	  
					  <table class="table table-hover table-bordered table-condensed table-striped" >
						  <tr>
						  	<th>Category</th>
							<th>City</th>
							<th>Matches</th>
						 </tr>
						  <tr ng-repeat="p in provides">
					    	  <td>{{p.category}}</td>
							  <td>{{p.city}}</td>
							  <td>{{p.matches}}</td>
						</tr>
					  </table>
				</div>	
				</div>
			</tab>
			<tab heading="Settings" select="selectedSettings()" data-ng-if="isloggedIn">
				<div class="panel panel-default">
				  <div class="panel-body">
				    
					  <form>
						  <div class="form-group">
							  <label for="screenName">Screen name:</label>
							  <input type="text" class="form-control" id="screenName" placeholder="Enter a screen name" ng-model="settings.screenName">
						  </div>
						  <div class="form-group">
							  <label for="email">Email:</label>
							  <input type="email" class="form-control" id="email" placeholder="Email" ng-model="settings.email">
						  </div>
						  <div class="form-group">
							  <label for="phone">Phone:</label>
							  <input type="text" class="form-control" id="phone" placeholder="phone number" ng-model="settings.phone">
						  </div>
						  <div class="form-group">
							  <label for="city">City:</label>
							  <input type="city" class="form-control" id="city" placeholder="city" ng-model="settings.city">
						  </div>
						  
						  <button type="submit" class="btn btn-default">Save</button>
					  </form>					
					
				  </div>
				</div>
				
			</tab>
			
			<tab>
				<tab-heading>
					<fb:login-button data-max-rows="1" data-size="large" data-show-faces="false" data-auto-logout-link="true" scope="public_profile,email" onlogin="checkLoginState();">
					</fb:login-button>
			        
				</tab-heading>
			</tab>
			
		</tabset>
	</div>
	<div class="col-md-1"></div>
</div>






<div id="status">
</div>

<!-- Latest compiled and minified JavaScript -->
<script src="/lib/jquery/dist/jquery.min.js"></script>
<script src="/lib/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="/lib/angular/angular.min.js"></script>
<script src="/lib/angular-bootstrap/ui-bootstrap-tpls.min.js"></script>

<script src="/dist/index.js"></script>


</body>
</html>
